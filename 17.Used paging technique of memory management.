#include <stdio.h>
#include <stdbool.h>

#define MAX_FRAMES 3
#define MAX_PAGES 10

// Function to check if page exists in memory
bool pageExists(int page, int *frames, int frameCount) {
    for (int i = 0; i < frameCount; i++) {
        if (frames[i] == page) {
            return true;
        }
    }
    return false;
}

// Function to display frames
void displayFrames(int *frames, int frameCount) {
    printf("Frames: ");
    for (int i = 0; i < frameCount; i++) {
        if (frames[i] == -1) {
            printf("- ");
        } else {
            printf("%d ", frames[i]);
        }
    }
    printf("\n");
}

int main() {
    int referenceString[MAX_PAGES] = {1, 2, 3, 4, 5, 6, 1, 2, 7, 8}; // Reference string
    int frames[MAX_FRAMES]; // Array to store frames
    int pageFaults = 0;

    // Initialize frames with -1 to indicate empty frame
    for (int i = 0; i < MAX_FRAMES; i++) {
        frames[i] = -1;
    }

    for (int i = 0; i < MAX_PAGES; i++) {
        // Check if page exists in memory
        if (!pageExists(referenceString[i], frames, MAX_FRAMES)) {
            // Page fault occurred
            pageFaults++;
            printf("Page fault for page %d\n", referenceString[i]);

            // Find the least recently used page
            int lruIndex = 0;
            int lruReference = i;
            for (int j = 0; j < MAX_FRAMES; j++) {
                int k = i - 1;
                while (k >= 0 && frames[j] != referenceString[k]) {
                    k--;
                }
                if (k < lruReference) {
                    lruReference = k;
                    lruIndex = j;
                }
            }

            // Replace the least recently used page
            frames[lruIndex] = referenceString[i];
        }

        displayFrames(frames, MAX_FRAMES);
    }

    printf("Total Page Faults: %d\n", pageFaults);

    return 0;
}
